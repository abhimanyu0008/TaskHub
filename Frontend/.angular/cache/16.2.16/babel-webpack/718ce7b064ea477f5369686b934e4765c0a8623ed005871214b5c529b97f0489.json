{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    // private url = 'http://localhost:8081/tasks/add-task';\n    this.baseUrl = 'http://localhost:8081/tasks';\n    this.task = {\n      id: 0,\n      title: '',\n      description: '',\n      status: ''\n    };\n  }\n  addTask(id, title, description, status, date) {\n    return this.http.post(this.baseUrl, {\n      id,\n      title,\n      description,\n      status,\n      date\n    });\n  }\n  getAllTask() {\n    return this.http.get(this.baseUrl);\n  }\n  getTaskById(id) {\n    return this.http.get(`${this.baseUrl}/get-task-by-id/${id}`);\n  }\n  updateTask(task) {\n    return this.http.put(`${this.baseUrl}/update-task`, task);\n  }\n  deleteTask(id) {\n    return this.http.delete(`${this.baseUrl}/delete-task/${id}`);\n  }\n  static {\n    this.ɵfac = function TaskService_Factory(t) {\n      return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TaskService,\n      factory: TaskService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TaskService","constructor","http","baseUrl","task","id","title","description","status","addTask","date","post","getAllTask","get","getTaskById","updateTask","put","deleteTask","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\web development\\KiranAcadmy\\Organizr\\src\\app\\services\\task.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private http:HttpClient) { }\n\n  // private url = 'http://localhost:8081/tasks/add-task';\n\n  private baseUrl = 'http://localhost:8081/tasks';\n\n  task={\n    id:0,\n    title:'',\n    description:'',\n    status:'',\n    \n  }\n\n  addTask(id: any,title: any,description: any,\n    status: any,date: any):Observable<any>{\n      return this.http.post(this.baseUrl,{id,title,description,status,date})\n  }\n\n  getAllTask(): Observable<any> {\n    return this.http.get(this.baseUrl);\n  }\n  getTaskById(id: any): Observable<any> {\n    return this.http.get(`${this.baseUrl}/get-task-by-id/${id}`);\n  }\n\n  updateTask(task: any): Observable<any> {\n    return this.http.put(`${this.baseUrl}/update-task`,task);\n  }\n  deleteTask(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/delete-task/${id}`);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAExB;IAEQ,KAAAC,OAAO,GAAG,6BAA6B;IAE/C,KAAAC,IAAI,GAAC;MACHC,EAAE,EAAC,CAAC;MACJC,KAAK,EAAC,EAAE;MACRC,WAAW,EAAC,EAAE;MACdC,MAAM,EAAC;KAER;EAZsC;EAcvCC,OAAOA,CAACJ,EAAO,EAACC,KAAU,EAACC,WAAgB,EACzCC,MAAW,EAACE,IAAS;IACnB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACR,OAAO,EAAC;MAACE,EAAE;MAACC,KAAK;MAACC,WAAW;MAACC,MAAM;MAACE;IAAI,CAAC,CAAC;EAC1E;EAEAE,UAAUA,CAAA;IACR,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAC,IAAI,CAACV,OAAO,CAAC;EACpC;EACAW,WAAWA,CAACT,EAAO;IACjB,OAAO,IAAI,CAACH,IAAI,CAACW,GAAG,CAAC,GAAG,IAAI,CAACV,OAAO,mBAAmBE,EAAE,EAAE,CAAC;EAC9D;EAEAU,UAAUA,CAACX,IAAS;IAClB,OAAO,IAAI,CAACF,IAAI,CAACc,GAAG,CAAC,GAAG,IAAI,CAACb,OAAO,cAAc,EAACC,IAAI,CAAC;EAC1D;EACAa,UAAUA,CAACZ,EAAU;IACnB,OAAO,IAAI,CAACH,IAAI,CAACgB,MAAM,CAAC,GAAG,IAAI,CAACf,OAAO,gBAAgBE,EAAE,EAAE,CAAC;EAC9D;;;uBAjCWL,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXtB,WAAW;MAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}