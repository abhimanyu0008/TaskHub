{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ForgetPasswordComponent = class ForgetPasswordComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    this.username = '';\n    this.newPassword = '';\n    this.confirmPassword = '';\n  }\n  changePassword() {\n    // Check if new password and confirm password match\n    if (this.newPassword !== this.confirmPassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n    // Call the service to change the password\n    this.passwordResetService.changePassword(this.username, this.newPassword).subscribe(response => {\n      // Handle successful response\n      alert(response.message); // Access the message from the response\n      this.router.navigate(['/login']); // Navigate to login page\n    }, error => {\n      // Handle error response\n      console.error('Error updating password:', error);\n      if (error.status === 404) {\n        alert(\"User not found.\");\n      } else {\n        alert(\"An error occurred while changing the password.\");\n      }\n    });\n  }\n};\nForgetPasswordComponent = __decorate([Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})], ForgetPasswordComponent);","map":{"version":3,"names":["Component","ForgetPasswordComponent","constructor","service","router","username","newPassword","confirmPassword","changePassword","alert","passwordResetService","subscribe","response","message","navigate","error","console","status","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\web development\\KiranAcadmy\\Organizr\\src\\app\\components\\forget-password\\forget-password.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\nexport class ForgetPasswordComponent {\n\n  username: string = '';\n  newPassword: string = '';\n  confirmPassword: string = '';\n\n\n\n  constructor(private service: PasswordResetService, private router: Router) {}\n\n  changePassword() {\n    // Check if new password and confirm password match\n    if (this.newPassword !== this.confirmPassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n\n    // Call the service to change the password\n    this.passwordResetService.changePassword(this.username, this.newPassword).subscribe(\n      (response) => {\n        // Handle successful response\n        alert(response.message); // Access the message from the response\n        this.router.navigate(['/login']); // Navigate to login page\n      },\n      (error) => {\n        // Handle error response\n        console.error('Error updating password:', error);\n        if (error.status === 404) {\n          alert(\"User not found.\");\n        } else {\n          alert(\"An error occurred while changing the password.\");\n        }\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAQlCC,YAAoBC,OAA6B,EAAUC,MAAc;IAArD,KAAAD,OAAO,GAAPA,OAAO;IAAgC,KAAAC,MAAM,GAANA,MAAM;IANjE,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,eAAe,GAAW,EAAE;EAIgD;EAE5EC,cAAcA,CAAA;IACZ;IACA,IAAI,IAAI,CAACF,WAAW,KAAK,IAAI,CAACC,eAAe,EAAE;MAC7CE,KAAK,CAAC,yBAAyB,CAAC;MAChC;;IAGF;IACA,IAAI,CAACC,oBAAoB,CAACF,cAAc,CAAC,IAAI,CAACH,QAAQ,EAAE,IAAI,CAACC,WAAW,CAAC,CAACK,SAAS,CAChFC,QAAQ,IAAI;MACX;MACAH,KAAK,CAACG,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC;MACzB,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,EACAC,KAAK,IAAI;MACR;MACAC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,IAAIA,KAAK,CAACE,MAAM,KAAK,GAAG,EAAE;QACxBR,KAAK,CAAC,iBAAiB,CAAC;OACzB,MAAM;QACLA,KAAK,CAAC,gDAAgD,CAAC;;IAE3D,CAAC,CACF;EACH;CACD;AAnCYR,uBAAuB,GAAAiB,UAAA,EALnClB,SAAS,CAAC;EACTmB,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACWpB,uBAAuB,CAmCnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}