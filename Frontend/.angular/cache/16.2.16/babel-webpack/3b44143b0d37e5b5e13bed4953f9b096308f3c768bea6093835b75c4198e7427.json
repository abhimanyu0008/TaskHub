{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ViewTaskComponent = class ViewTaskComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    // deleteTask(id:any){\n    //   this.service.deleteTask(id).subscribe((data)=>{\n    //     this.getAllTask();\n    //   })\n    // }\n    this.tasks = [];\n  }\n  ngOnInit() {\n    this.getAllTask();\n  }\n  getAllTask() {\n    this.service.getAllTask().subscribe(response => {\n      this.task = response;\n    });\n  }\n  deleteTask(id) {\n    if (confirm('Are you sure you want to delete this task?')) {\n      this.service.deleteTask(id).subscribe(response => {\n        console.log('Task deleted successfully:', response); // Log the response\n        // Remove the deleted task from the tasks array\n        this.tasks = this.tasks.filter(task => task.id !== id);\n      }, error => {\n        console.error('Error deleting task:', error);\n      });\n    }\n  }\n};\nViewTaskComponent = __decorate([Component({\n  selector: 'app-view-task',\n  templateUrl: './view-task.component.html',\n  styleUrls: ['./view-task.component.css']\n})], ViewTaskComponent);","map":{"version":3,"names":["Component","ViewTaskComponent","constructor","service","router","tasks","ngOnInit","getAllTask","subscribe","response","task","deleteTask","id","confirm","console","log","filter","error","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\web development\\KiranAcadmy\\Organizr\\src\\app\\components\\view-task\\view-task.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TaskService } from 'src/app/services/task.service';\n\n@Component({\n  selector: 'app-view-task',\n  templateUrl: './view-task.component.html',\n  styleUrls: ['./view-task.component.css']\n})\nexport class ViewTaskComponent implements OnInit{\n\n  constructor(private service:TaskService,private router:Router) {}\n\n  ngOnInit(): void {\n    this.getAllTask();\n  }\n  task:any;\n  getAllTask(){\n    this.service.getAllTask().subscribe((response)=>{\n      this.task=response;\n    })\n  }\n  // deleteTask(id:any){\n  //   this.service.deleteTask(id).subscribe((data)=>{\n  //     this.getAllTask();\n  //   })\n  // }\n\n  tasks: any[] = [];\n\n  deleteTask(id: number) {\n    if (confirm('Are you sure you want to delete this task?')) {\n      this.service.deleteTask(id).subscribe(\n        (response) => {\n          console.log('Task deleted successfully:', response); // Log the response\n          // Remove the deleted task from the tasks array\n          this.tasks = this.tasks.filter(task => task.id !== id);\n        },\n        (error) => {\n          console.error('Error deleting task:', error);\n        }\n      );\n    }\n  }\n  \n  \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAE5BC,YAAoBC,OAAmB,EAASC,MAAa;IAAzC,KAAAD,OAAO,GAAPA,OAAO;IAAqB,KAAAC,MAAM,GAANA,MAAM;IAWtD;IACA;IACA;IACA;IACA;IAEA,KAAAC,KAAK,GAAU,EAAE;EAjB+C;EAEhEC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACJ,OAAO,CAACI,UAAU,EAAE,CAACC,SAAS,CAAEC,QAAQ,IAAG;MAC9C,IAAI,CAACC,IAAI,GAACD,QAAQ;IACpB,CAAC,CAAC;EACJ;EASAE,UAAUA,CAACC,EAAU;IACnB,IAAIC,OAAO,CAAC,4CAA4C,CAAC,EAAE;MACzD,IAAI,CAACV,OAAO,CAACQ,UAAU,CAACC,EAAE,CAAC,CAACJ,SAAS,CAClCC,QAAQ,IAAI;QACXK,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEN,QAAQ,CAAC,CAAC,CAAC;QACrD;QACA,IAAI,CAACJ,KAAK,GAAG,IAAI,CAACA,KAAK,CAACW,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACE,EAAE,KAAKA,EAAE,CAAC;MACxD,CAAC,EACAK,KAAK,IAAI;QACRH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CACF;;EAEL;CAGD;AArCYhB,iBAAiB,GAAAiB,UAAA,EAL7BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWpB,iBAAiB,CAqC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}