{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/login.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class ForgetPasswordComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    this.username = '';\n    this.newPassword = '';\n    this.confirmPassword = '';\n  }\n  changePassword() {\n    // Check if new password and confirm password match\n    if (this.newPassword !== this.confirmPassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n    // Call the service to change the password\n    this.passwordResetService.changePassword(this.username, this.newPassword).subscribe(response => {\n      // Handle successful response\n      alert(\"Password updated successfully.\");\n      this.router.navigate(['/login']); // Navigate to login page\n    }, error => {\n      // Handle error response\n      console.error('Error updating password:', error);\n      if (error.status === 404) {\n        alert(\"User not found.\");\n      } else {\n        alert(\"An error occurred while changing the password.\");\n      }\n    });\n  }\n  static {\n    this.ɵfac = function ForgetPasswordComponent_Factory(t) {\n      return new (t || ForgetPasswordComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ForgetPasswordComponent,\n      selectors: [[\"app-forget-password\"]],\n      decls: 27,\n      vars: 3,\n      consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [\"href\", \"https://fonts.googleapis.com/css2?family=Poppins:wght@300;500;600&display=swap\", \"rel\", \"stylesheet\"], [\"href\", \"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\", \"rel\", \"stylesheet\"], [1, \"container\", \"mt-5\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"placeholder\", \"Enter your username\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"newPassword\"], [\"type\", \"password\", \"id\", \"newPassword\", \"placeholder\", \"Enter new password\", \"name\", \"newPassword\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"confirmPassword\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"placeholder\", \"Confirm new password\", \"name\", \"confirmPassword\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n      template: function ForgetPasswordComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n          i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n          i0.ɵɵelementStart(4, \"title\");\n          i0.ɵɵtext(5, \"Change Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"link\", 3)(7, \"link\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"body\")(9, \"div\", 5)(10, \"h3\");\n          i0.ɵɵtext(11, \"Change Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"form\", 6);\n          i0.ɵɵlistener(\"ngSubmit\", function ForgetPasswordComponent_Template_form_ngSubmit_12_listener() {\n            return ctx.changePassword();\n          });\n          i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\", 8);\n          i0.ɵɵtext(15, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"input\", 9);\n          i0.ɵɵlistener(\"ngModelChange\", function ForgetPasswordComponent_Template_input_ngModelChange_16_listener($event) {\n            return ctx.username = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\", 7)(18, \"label\", 10);\n          i0.ɵɵtext(19, \"New Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"input\", 11);\n          i0.ɵɵlistener(\"ngModelChange\", function ForgetPasswordComponent_Template_input_ngModelChange_20_listener($event) {\n            return ctx.newPassword = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 7)(22, \"label\", 12);\n          i0.ɵɵtext(23, \"Confirm Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"input\", 13);\n          i0.ɵɵlistener(\"ngModelChange\", function ForgetPasswordComponent_Template_input_ngModelChange_24_listener($event) {\n            return ctx.confirmPassword = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"button\", 14);\n          i0.ɵɵtext(26, \"Change Password\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.newPassword);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.confirmPassword);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["ForgetPasswordComponent","constructor","service","router","username","newPassword","confirmPassword","changePassword","alert","passwordResetService","subscribe","response","navigate","error","console","status","i0","ɵɵdirectiveInject","i1","LoginService","i2","Router","selectors","decls","vars","consts","template","ForgetPasswordComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ForgetPasswordComponent_Template_form_ngSubmit_12_listener","ForgetPasswordComponent_Template_input_ngModelChange_16_listener","$event","ForgetPasswordComponent_Template_input_ngModelChange_20_listener","ForgetPasswordComponent_Template_input_ngModelChange_24_listener","ɵɵadvance","ɵɵproperty"],"sources":["D:\\web development\\KiranAcadmy\\Organizr\\src\\app\\components\\forget-password\\forget-password.component.ts","D:\\web development\\KiranAcadmy\\Organizr\\src\\app\\components\\forget-password\\forget-password.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\nexport class ForgetPasswordComponent {\n\n\n  username: string = '';\n  newPassword: string = '';\n  confirmPassword: string = '';\n\n  constructor(private service: LoginService, private router: Router) {}\n\n  changePassword() {\n    // Check if new password and confirm password match\n    if (this.newPassword !== this.confirmPassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n\n    // Call the service to change the password\n    this.passwordResetService.changePassword(this.username, this.newPassword).subscribe(\n      (response) => {\n        // Handle successful response\n        alert(\"Password updated successfully.\");\n        this.router.navigate(['/login']); // Navigate to login page\n      },\n      (error) => {\n        // Handle error response\n        console.error('Error updating password:', error);\n        if (error.status === 404) {\n          alert(\"User not found.\");\n        } else {\n          alert(\"An error occurred while changing the password.\");\n        }\n      }\n    );\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Change Password</title>\n  <!-- Google Fonts -->\n  <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@300;500;600&display=swap\" rel=\"stylesheet\">\n  <!-- Bootstrap CSS -->\n  <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\n</head>\n<body>\n  <div class=\"container mt-5\">\n    <h3>Change Password</h3>\n    <form (ngSubmit)=\"changePassword()\">\n      <!-- Username -->\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" id=\"username\" class=\"form-control\" placeholder=\"Enter your username\"\n               [(ngModel)]=\"username\" name=\"username\" required>\n      </div>\n\n      <!-- New Password -->\n      <div class=\"form-group\">\n        <label for=\"newPassword\">New Password</label>\n        <input type=\"password\" id=\"newPassword\" class=\"form-control\" placeholder=\"Enter new password\"\n               [(ngModel)]=\"newPassword\" name=\"newPassword\" required>\n      </div>\n\n      <!-- Confirm Password -->\n      <div class=\"form-group\">\n        <label for=\"confirmPassword\">Confirm Password</label>\n        <input type=\"password\" id=\"confirmPassword\" class=\"form-control\" placeholder=\"Confirm new password\"\n               [(ngModel)]=\"confirmPassword\" name=\"confirmPassword\" required>\n      </div>\n\n      <!-- Submit Button -->\n      <button type=\"submit\" class=\"btn btn-primary\">Change Password</button>\n    </form>\n  </div>\n\n  <!-- Bootstrap JS and dependencies (optional) -->\n  <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js\"></script>\n  <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n</body>\n</html>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}