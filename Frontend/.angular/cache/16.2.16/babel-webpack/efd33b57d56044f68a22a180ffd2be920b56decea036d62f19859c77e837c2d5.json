{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:8081/tasks/add-task';\n  }\n  addTask(id, title, description, status, date) {\n    return this.http.post(this.url, {\n      id,\n      title,\n      description,\n      status,\n      date\n    });\n  }\n  getAllTask() {\n    const url1 = 'http://localhost:8081/tasks/get-all-task';\n    return this.http.get(url1);\n  }\n  getTaskById(id) {\n    const url2 = `http://localhost:80/user/get-user-by-username/${id}`;\n    return this.http.get(url2);\n  }\n  static {\n    this.ɵfac = function TaskService_Factory(t) {\n      return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TaskService,\n      factory: TaskService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TaskService","constructor","http","url","addTask","id","title","description","status","date","post","getAllTask","url1","get","getTaskById","url2","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\web development\\KiranAcadmy\\Organizr\\src\\app\\services\\task.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private http:HttpClient) { }\n  private url = 'http://localhost:8081/tasks/add-task';\n\n  addTask(id: any,title: any,description: any,\n    status: any,date: any):Observable<any>{\n      return this.http.post(this.url,{id,title,description,status,date})\n  }\n\n  getAllTask(): Observable<any> {\n    const url1 = 'http://localhost:8081/tasks/get-all-task';\n    return this.http.get(url1);\n  }\n  getTaskById(id:any):Observable<any>{\n    const url2=`http://localhost:80/user/get-user-by-username/${id}`;\n    return this.http.get(url2)\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAChB,KAAAC,GAAG,GAAG,sCAAsC;EADb;EAGvCC,OAAOA,CAACC,EAAO,EAACC,KAAU,EAACC,WAAgB,EACzCC,MAAW,EAACC,IAAS;IACnB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,GAAG,EAAC;MAACE,EAAE;MAACC,KAAK;MAACC,WAAW;MAACC,MAAM;MAACC;IAAI,CAAC,CAAC;EACtE;EAEAE,UAAUA,CAAA;IACR,MAAMC,IAAI,GAAG,0CAA0C;IACvD,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAACD,IAAI,CAAC;EAC5B;EACAE,WAAWA,CAACT,EAAM;IAChB,MAAMU,IAAI,GAAC,iDAAiDV,EAAE,EAAE;IAChE,OAAO,IAAI,CAACH,IAAI,CAACW,GAAG,CAACE,IAAI,CAAC;EAC5B;;;uBAjBWf,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXnB,WAAW;MAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}