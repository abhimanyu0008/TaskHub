{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let SignupComponent = class SignupComponent {\n  constructor(formBuilder, service, router) {\n    this.formBuilder = formBuilder;\n    this.service = service;\n    this.router = router;\n    this.signupForm = this.formBuilder.group({\n      fullName: ['', Validators.required],\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', [Validators.required, Validators.pattern('[0-9]{10}')]],\n      password: ['', Validators.required],\n      gender: ['', Validators.required]\n    });\n  }\n  addUser() {\n    if (this.signupForm.valid) {\n      this.service.addUser(this.signupForm.value.fullName, this.signupForm.value.username, this.signupForm.value.email, this.signupForm.value.phone, this.signupForm.value.password, this.signupForm.value.gender).subscribe(response => {\n        console.log('User added successfully:', response);\n        this.router.navigate(['/home']);\n      }, error => {\n        if (error.status === 409) {\n          // Assuming 409 for conflict\n          alert('Username already exists. Please choose another one.');\n        } else {\n          console.error('Error occurred while adding user:', error.message);\n        }\n      });\n    } else {\n      alert('Please fill all required fields correctly!');\n    }\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);","map":{"version":3,"names":["Component","Validators","SignupComponent","constructor","formBuilder","service","router","signupForm","group","fullName","required","username","email","phone","pattern","password","gender","addUser","valid","value","subscribe","response","console","log","navigate","error","status","alert","message","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\web development\\KiranAcadmy\\Organizr\\src\\app\\components\\signup\\signup.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { SignupService } from 'src/app/services/signup.service';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent {\n  signupForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private service: SignupService,\n    private router: Router\n  ) {\n    this.signupForm = this.formBuilder.group({\n      fullName: ['', Validators.required],\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', [Validators.required, Validators.pattern('[0-9]{10}')]],\n      password: ['', Validators.required],\n      gender: ['', Validators.required]\n    });\n  }\n\n  addUser() {\n    if (this.signupForm.valid) {\n      this.service.addUser(\n        this.signupForm.value.fullName,\n        this.signupForm.value.username,\n        this.signupForm.value.email,\n        this.signupForm.value.phone,\n        this.signupForm.value.password,\n        this.signupForm.value.gender\n      ).subscribe(\n        (response) => {\n          console.log('User added successfully:', response);\n          this.router.navigate(['/home']);\n        },\n        (error: HttpErrorResponse) => {\n          if (error.status === 409) { // Assuming 409 for conflict\n            alert('Username already exists. Please choose another one.');\n          } else {\n            console.error('Error occurred while adding user:', error.message);\n          }\n        }\n      );\n    } else {\n      alert('Please fill all required fields correctly!');\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAU5D,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAG1BC,YACUC,WAAwB,EACxBC,OAAsB,EACtBC,MAAc;IAFd,KAAAF,WAAW,GAAXA,WAAW;IACX,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,MAAM,GAANA,MAAM;IAEd,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACvCC,QAAQ,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ,CAAC;MACnCE,KAAK,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACW,KAAK,CAAC,CAAC;MACpDC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACa,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;MACnEC,QAAQ,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACS,QAAQ,CAAC;MACnCM,MAAM,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACS,QAAQ;KACjC,CAAC;EACJ;EAEAO,OAAOA,CAAA;IACL,IAAI,IAAI,CAACV,UAAU,CAACW,KAAK,EAAE;MACzB,IAAI,CAACb,OAAO,CAACY,OAAO,CAClB,IAAI,CAACV,UAAU,CAACY,KAAK,CAACV,QAAQ,EAC9B,IAAI,CAACF,UAAU,CAACY,KAAK,CAACR,QAAQ,EAC9B,IAAI,CAACJ,UAAU,CAACY,KAAK,CAACP,KAAK,EAC3B,IAAI,CAACL,UAAU,CAACY,KAAK,CAACN,KAAK,EAC3B,IAAI,CAACN,UAAU,CAACY,KAAK,CAACJ,QAAQ,EAC9B,IAAI,CAACR,UAAU,CAACY,KAAK,CAACH,MAAM,CAC7B,CAACI,SAAS,CACRC,QAAQ,IAAI;QACXC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;QACjD,IAAI,CAACf,MAAM,CAACkB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MACjC,CAAC,EACAC,KAAwB,IAAI;QAC3B,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;UAAE;UAC1BC,KAAK,CAAC,qDAAqD,CAAC;SAC7D,MAAM;UACLL,OAAO,CAACG,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAACG,OAAO,CAAC;;MAErE,CAAC,CACF;KACF,MAAM;MACLD,KAAK,CAAC,4CAA4C,CAAC;;EAEvD;CACD;AA5CYzB,eAAe,GAAA2B,UAAA,EAL3B7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACW9B,eAAe,CA4C3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}