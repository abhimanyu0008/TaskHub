{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    // private url = 'http://localhost:8081/tasks/add-task';\n    this.baseUrl = 'http://localhost:8081/tasks';\n  }\n  addTask(task) {\n    return this.http.post(this.baseUrl, task);\n  }\n  getAllTask() {\n    return this.http.get(this.baseUrl);\n  }\n  getTaskById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  updateTask(task) {\n    return this.http.put(`${this.baseUrl}/update-task`, task);\n  }\n  deleteTask(id) {\n    return this.http.delete(`${this.baseUrl}/delete-task/${id}`);\n  }\n  static {\n    this.ɵfac = function TaskService_Factory(t) {\n      return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TaskService,\n      factory: TaskService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TaskService","constructor","http","baseUrl","addTask","task","post","getAllTask","get","getTaskById","id","updateTask","put","deleteTask","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\web development\\KiranAcadmy\\Organizr\\src\\app\\services\\task.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private http:HttpClient) { }\n  // private url = 'http://localhost:8081/tasks/add-task';\n\n  private baseUrl = 'http://localhost:8081/tasks';\n\n  addTask(task:any):Observable<any>{\n      return this.http.post(this.baseUrl,task)\n  }\n  getAllTask(): Observable<any> {\n    return this.http.get(this.baseUrl);\n  }\n  getTaskById(id: any): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  updateTask(task: any): Observable<any> {\n    return this.http.put(`${this.baseUrl}/update-task`,task);\n  }\n  deleteTask(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/delete-task/${id}`);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IACxB;IAEQ,KAAAC,OAAO,GAAG,6BAA6B;EAHR;EAKvCC,OAAOA,CAACC,IAAQ;IACZ,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,OAAO,EAACE,IAAI,CAAC;EAC5C;EACAE,UAAUA,CAAA;IACR,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACL,OAAO,CAAC;EACpC;EACAM,WAAWA,CAACC,EAAO;IACjB,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACL,OAAO,IAAIO,EAAE,EAAE,CAAC;EAC/C;EAEAC,UAAUA,CAACN,IAAS;IAClB,OAAO,IAAI,CAACH,IAAI,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,cAAc,EAACE,IAAI,CAAC;EAC1D;EACAQ,UAAUA,CAACH,EAAU;IACnB,OAAO,IAAI,CAACR,IAAI,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,OAAO,gBAAgBO,EAAE,EAAE,CAAC;EAC9D;;;uBAtBWV,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXlB,WAAW;MAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}