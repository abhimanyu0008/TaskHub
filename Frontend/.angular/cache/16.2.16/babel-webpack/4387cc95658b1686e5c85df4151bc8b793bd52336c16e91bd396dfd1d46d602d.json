{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let SignupComponent = class SignupComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n  }\n  addUser() {\n    this.service.addUser(this.fullName, this.username, this.email, this.phone, this.password, this.gender).subscribe(response => {\n      console.log('User added successfully:', response);\n      this.router.navigate(['/home']);\n    }, error => {\n      if (error.status === 409) {\n        // Handle conflict errors (username or email already exists)\n        alert(error.error); // Display the message returned by the backend\n      } else {\n        console.error('Error occurred while adding user:', error.message);\n        alert('An error occurred during registration. Please try again.');\n      }\n    });\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);","map":{"version":3,"names":["Component","SignupComponent","constructor","service","router","addUser","fullName","username","email","phone","password","gender","subscribe","response","console","log","navigate","error","status","alert","message","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\web development\\KiranAcadmy\\Organizr\\src\\app\\components\\signup\\signup.component.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SignupService } from 'src/app/services/signup.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent {\n\n  constructor(private service:SignupService,private router:Router){}\nfullName: any;\nusername: any;\nemail: any;\nphone: any;\npassword: any;\ngender: any;\n\naddUser() {\n  this.service.addUser(this.fullName, this.username, this.email, this.phone, this.password, this.gender)\n    .subscribe(\n      (response) => {\n        console.log('User added successfully:', response);\n        this.router.navigate(['/home']);\n      },\n      (error: HttpErrorResponse) => {\n        if (error.status === 409) {\n          // Handle conflict errors (username or email already exists)\n          alert(error.error); // Display the message returned by the backend\n        } else {\n          console.error('Error occurred while adding user:', error.message);\n          alert('An error occurred during registration. Please try again.');\n        }\n      }\n    );\n}\n\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAE1BC,YAAoBC,OAAqB,EAASC,MAAa;IAA3C,KAAAD,OAAO,GAAPA,OAAO;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAS;EAQnEC,OAAOA,CAAA;IACL,IAAI,CAACF,OAAO,CAACE,OAAO,CAAC,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,MAAM,CAAC,CACnGC,SAAS,CACPC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,QAAQ,CAAC;MACjD,IAAI,CAACT,MAAM,CAACY,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,EACAC,KAAwB,IAAI;MAC3B,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;QACxB;QACAC,KAAK,CAACF,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;OACrB,MAAM;QACLH,OAAO,CAACG,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAACG,OAAO,CAAC;QACjED,KAAK,CAAC,0DAA0D,CAAC;;IAErE,CAAC,CACF;EACL;CAEC;AA7BYlB,eAAe,GAAAoB,UAAA,EAL3BrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWvB,eAAe,CA6B3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}