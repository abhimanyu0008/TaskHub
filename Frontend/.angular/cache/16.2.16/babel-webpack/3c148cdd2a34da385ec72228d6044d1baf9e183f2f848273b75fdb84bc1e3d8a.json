{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    // private url = 'http://localhost:8081/tasks/add-task';\n    this.baseUrl = 'http://localhost:8081/tasks';\n    this.task = {\n      id: 0,\n      title: '',\n      description: '',\n      status: '',\n      date: ''\n    };\n  }\n  addTask(any) {\n    return this.http.post(this.baseUrl);\n  }\n  static {\n    this.ɵfac = function TaskService_Factory(t) {\n      return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TaskService,\n      factory: TaskService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\ngetAllTask();\nObservable < any > {\n  return: this.http.get(this.baseUrl)\n};\ngetTaskById(id, any);\nObservable < any > {\n  return: this.http.get(`${this.baseUrl}/get-task-by-id/${id}`)\n};\nupdateTask(task, any);\nObservable < any > {\n  return: this.http.put(`${this.baseUrl}/update-task`, task)\n};\ndeleteTask(id, number);\nObservable < any > {\n  return: this.http.delete(`${this.baseUrl}/delete-task/${id}`)\n};","map":{"version":3,"names":["Observable","TaskService","constructor","http","baseUrl","task","id","title","description","status","date","addTask","any","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","getAllTask","return","get","getTaskById","updateTask","put","deleteTask","number","delete"],"sources":["D:\\web development\\KiranAcadmy\\Organizr\\src\\app\\services\\task.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private http:HttpClient) { }\n\n  // private url = 'http://localhost:8081/tasks/add-task';\n\n  private baseUrl = 'http://localhost:8081/tasks';\n\n  task={\n    id:0,\n    title:'',\n    description:'',\n    status:'',\n    date:''\n  }\n\n  addTask(this: any.task: any):Observable<any>{\n      return this.http.post(this.baseUrl,})\n  }\n\n  getAllTask(): Observable<any> {\n    return this.http.get(this.baseUrl);\n  }\n  getTaskById(id: any): Observable<any> {\n    return this.http.get(`${this.baseUrl}/get-task-by-id/${id}`);\n  }\n\n  updateTask(task: any): Observable<any> {\n    return this.http.put(`${this.baseUrl}/update-task`,task);\n  }\n  deleteTask(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/delete-task/${id}`);\n  }\n}\n"],"mappings":"AAEA,SAASA,UAAU,QAAQ,MAAM;;;AAKjC,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAExB;IAEQ,KAAAC,OAAO,GAAG,6BAA6B;IAE/C,KAAAC,IAAI,GAAC;MACHC,EAAE,EAAC,CAAC;MACJC,KAAK,EAAC,EAAE;MACRC,WAAW,EAAC,EAAE;MACdC,MAAM,EAAC,EAAE;MACTC,IAAI,EAAC;KACN;EAZsC;EAcvCC,OAAOA,CAAiBC,GAAG;IACvB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,OAAO,CAAC;EAAA;;;uBAjB5BH,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXhB,WAAW;MAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA;;AAsBlBC,UAAU,EAAE;AAAErB,UAAU,GAACY,GAAG,GAAE;EAC5BU,MAAM,EAAC,IAAI,CAACnB,IAAI,CAACoB,GAAG,CAAC,IAAI,CAACnB,OAAO;CAClC;AACDoB,WAAW,CAAClB,EAAE,EAAEM,GAAG,CAAC;AAAEZ,UAAU,GAACY,GAAG,GAAE;EACpCU,MAAM,EAAC,IAAI,CAACnB,IAAI,CAACoB,GAAG,CAAC,GAAG,IAAI,CAACnB,OAAO,mBAAmBE,EAAE,EAAE;CAC5D;AAEDmB,UAAU,CAACpB,IAAI,EAAEO,GAAG,CAAC;AAAEZ,UAAU,GAACY,GAAG,GAAE;EACrCU,MAAM,EAAC,IAAI,CAACnB,IAAI,CAACuB,GAAG,CAAC,GAAG,IAAI,CAACtB,OAAO,cAAc,EAACC,IAAI;CACxD;AACDsB,UAAU,CAACrB,EAAE,EAAEsB,MAAM,CAAC;AAAE5B,UAAU,GAACY,GAAG,GAAE;EACtCU,MAAM,EAAC,IAAI,CAACnB,IAAI,CAAC0B,MAAM,CAAC,GAAG,IAAI,CAACzB,OAAO,gBAAgBE,EAAE,EAAE;CAC5D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}