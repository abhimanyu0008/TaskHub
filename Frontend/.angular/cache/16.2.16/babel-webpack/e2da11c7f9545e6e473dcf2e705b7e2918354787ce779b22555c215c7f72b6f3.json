{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8081/tasks';\n  }\n  addTask(task) {\n    return this.http.post(this.baseUrl, task, {\n      responseType: 'text'\n    });\n  }\n  getAllTask() {\n    return this.http.get(this.baseUrl);\n  }\n  getTaskById(id) {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  updateTask(task) {\n    return this.http.put(this.baseUrl, task, {\n      responseType: 'text'\n    });\n  }\n  deleteTask(id) {\n    return this.http.delete(`${this.baseUrl}/${id}`, {\n      responseType: 'text'\n    });\n  }\n  static {\n    this.ɵfac = function TaskService_Factory(t) {\n      return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TaskService,\n      factory: TaskService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TaskService","constructor","http","baseUrl","addTask","task","post","responseType","getAllTask","get","getTaskById","id","updateTask","put","deleteTask","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\web development\\KiranAcadmy\\Organizr\\src\\app\\services\\task.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private http:HttpClient) { }\n\n  private baseUrl = 'http://localhost:8081/tasks';\n\n  addTask(task: any): Observable<any> {\n    return this.http.post(this.baseUrl, task, { responseType: 'text' });\n  }\n  getAllTask(): Observable<any> {\n    return this.http.get(this.baseUrl);\n  }\n  getTaskById(id: any): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n  updateTask(task: any): Observable<any> {\n    return this.http.put(this.baseUrl,task,{ responseType: 'text' });\n  }\n  deleteTask(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, \n      { responseType: 'text' });\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAEhB,KAAAC,OAAO,GAAG,6BAA6B;EAFR;EAIvCC,OAAOA,CAACC,IAAS;IACf,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,OAAO,EAAEE,IAAI,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EACrE;EACAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,IAAI,CAACN,OAAO,CAAC;EACpC;EACAO,WAAWA,CAACC,EAAO;IACjB,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAC,GAAG,IAAI,CAACN,OAAO,IAAIQ,EAAE,EAAE,CAAC;EAC/C;EACAC,UAAUA,CAACP,IAAS;IAClB,OAAO,IAAI,CAACH,IAAI,CAACW,GAAG,CAAC,IAAI,CAACV,OAAO,EAACE,IAAI,EAAC;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EAClE;EACAO,UAAUA,CAACH,EAAU;IACnB,OAAO,IAAI,CAACT,IAAI,CAACa,MAAM,CAAC,GAAG,IAAI,CAACZ,OAAO,IAAIQ,EAAE,EAAE,EAC7C;MAAEJ,YAAY,EAAE;IAAM,CAAE,CAAC;EAC7B;;;uBArBWP,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXnB,WAAW;MAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}